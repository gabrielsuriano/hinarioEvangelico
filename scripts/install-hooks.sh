#!/bin/sh

# Script de Instala√ß√£o dos Git Hooks
# Execute ap√≥s clonar o reposit√≥rio: npm run install:hooks

echo "üîß Instalando Git Hooks..."

HOOKS_DIR=".git/hooks"
SOURCE_DIR="hooks"

# Verificar se a pasta hooks existe
if [ ! -d "$SOURCE_DIR" ]; then
  echo "‚ùå Pasta 'hooks/' n√£o encontrada!"
  exit 1
fi

# Copiar hooks
cp "$SOURCE_DIR/pre-commit" "$HOOKS_DIR/pre-commit"
cp "$SOURCE_DIR/prepare-commit-msg" "$HOOKS_DIR/prepare-commit-msg"
cp "$SOURCE_DIR/post-commit" "$HOOKS_DIR/post-commit"

# Tornar execut√°veis
chmod +x "$HOOKS_DIR/pre-commit"
chmod +x "$HOOKS_DIR/prepare-commit-msg"
chmod +x "$HOOKS_DIR/post-commit"

echo "‚úÖ Hooks instalados com sucesso!"
echo ""
echo "üìã Hooks ativos:"
echo "   ‚Ä¢ pre-commit: Sincroniza vers√£o antes do commit"
echo "   ‚Ä¢ prepare-commit-msg: Versionamento autom√°tico via [FIX], [FEAT], [MAJOR]"
echo "   ‚Ä¢ post-commit: Adiciona package.json atualizado ao commit via amend"
echo ""
echo "üéØ Uso:"
echo "   git commit -m \"[FIX] Descri√ß√£o\"   ‚Üí patch (1.3.0 ‚Üí 1.3.1)"
echo "   git commit -m \"[FEAT] Descri√ß√£o\"  ‚Üí minor (1.3.0 ‚Üí 1.4.0)"
echo "   git commit -m \"[MAJOR] Descri√ß√£o\" ‚Üí major (1.3.0 ‚Üí 2.0.0)"
